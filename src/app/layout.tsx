import type { Metadata } from 'next';

import '../globals.css';

import { Source_Sans_3, Merriweather } from 'next/font/google';

import { Button } from '@/components/atoms';
import { USER_TYPES, userConfigs } from '@/constants/common';
import { UserType } from '@/types';
import { getCurrentUserFromCookie } from '@/utils';

const meriweatherFont = Merriweather({
  variable: '--font-meriweather',
  subsets: ['latin'],
});

const sourceSansProFont = Source_Sans_3({
  variable: '--font-source-sans-pro',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Newsletter',
  description: 'Generated by create next app',
};

interface UserTypeButtonsProps {
  currentUserId: string | undefined;
  userType: UserType;
}

function UserTypeButtons({ currentUserId, userType }: UserTypeButtonsProps) {
  return currentUserId === userConfigs[userType].id ? (
    <Button key={userType} asChild variant="disabled">
      <p>{userType}</p>
    </Button>
  ) : (
    <Button key={userType} asChild variant="default">
      <a href={`/connect/${userType}`}>{userType}</a>
    </Button>
  );
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const currentUser = await getCurrentUserFromCookie();

  return (
    <html lang="fr">
      <body
        className={`
          ${meriweatherFont.variable}
          ${sourceSansProFont.variable}
          antialiased
        `}
      >
        <div
          className={`
            relative mx-5 mt-3 mb-15 flex flex-col justify-center gap-3
            sm:flex-row
          `}
        >
          {Object.values(USER_TYPES).map((userType) => (
            <UserTypeButtons key={userType} currentUserId={currentUser?.id} userType={userType} />
          ))}
        </div>
        <div className="mx-auto h-px w-full max-w-layout bg-neutral-low-contrast" />
        <div
          className={`
            mx-0 my-15 max-w-layout
            sm:mx-5
            lg:mx-auto
          `}
        >
          {children}
        </div>
      </body>
    </html>
  );
}
